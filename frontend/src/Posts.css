/* 
 * Posts.css - Modern styling for the Posts component
 * This file handles all visual styling for the Posts component
 */

/* 
 * Main container for the entire posts section
 * Uses fixed height and overflow to prevent layout issues with navbar
 * The margin-top value can be adjusted to push content down below navbar
 */
 .posts-container {
  width: 1200px;
  margin: 0 auto;
  margin-top: 60px; /* Adjust this value to match your navbar height + desired spacing */
  padding: 2rem;
  height: calc(100vh - 150px); /* Adjusted to account for navbar + margin-top */
  display: flex;
  flex-direction: column;
  overflow: hidden; /* Prevents content from pushing outside container */
}

/* 
 * Header section that contains the title and create button
 * Position: sticky keeps it visible as content scrolls
 */
.posts-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
  background-color: white; /* Ensures text is readable when scrolling */
  position: sticky;
  top: 0;
  z-index: 10; /* Keeps header above scrolling content */
  padding-bottom: 1rem;
  border-bottom: 1px solid #f0f0f0;
}

/* Title styling */
.posts-header h1 {
  font-size: 2rem;
  color: #000000;
  align-items: left;
  margin: 0;
}

/* 
 * Create post button styling
 * Uses contrasting color to stand out
 */
.create-button {
  background: linear-gradient(90deg, #ffd500, #ff9900);
  color: white;
  border: none;
  border-radius: 4px;
  padding: 0.75rem 1.5rem;
  font-size: 1rem;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.2s ease;
}

.create-button:hover {
  background: linear-gradient(90deg, #be9e02, #bc7204);
}

/* 
 * Content area that will scroll if posts overflow
 * flex-grow: 1 allows it to take remaining space
 */
.posts-content {
  flex-grow: 1;
  overflow-y: auto; /* Enables scrolling for this section only */
  padding-right: 0.5rem; /* Space for scrollbar */
}

/* Styling for loading state */
.loading-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  height: 200px;
}

/* Custom loading spinner animation */
.loading-spinner {
  border: 4px solid rgba(0, 0, 0, 0.1);
  border-radius: 50%;
  border-top: 4px solid #4a90e2;
  width: 40px;
  height: 40px;
  animation: spin 1s linear infinite;
  margin-bottom: 1rem;
}

/* Animation for spinner rotation */
@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

/* Empty state when no posts exist */
.no-posts {
  text-align: center;
  padding: 3rem;
  background-color: #f9f9f9;
  border-radius: 8px;
}

/* 
 * Grid layout for displaying posts
 * Automatically adjusts columns based on container width
 */
.posts-grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
  gap: 2rem;
  padding-bottom: 2rem; /* Space at bottom of scrollable content */
}

/* 
 * Individual post card styling 
 * Uses box-shadow for elevation and subtle hover effect
 */
.post-card {
  background-color: white;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.post-card:hover {
  transform: translateY(-4px);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
}

/* Featured image for posts */
.post-image {
  height: 200px;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

/* Container for post text content */
.post-content {
  padding: 1.5rem;
}

/* Post title styling */
.post-content h2 {
  margin-top: 0;
  margin-bottom: 0.75rem;
  font-size: 1.5rem;
  color: #333;
}

/* Post body text styling */
.post-content p {
  color: #555;
  line-height: 1.6;
  margin-bottom: 1.5rem;
}

/* Container for post metadata (like counts) */
.post-meta {
  display: flex;
  margin-bottom: 1rem;
  font-size: 0.9rem;
  color: #777;
}

/* Heart icon in the likes count */
.heart-icon {
  color: #ff4757;
  margin-right: 4px;
  font-size: 1rem;
}

/* Container for action buttons */
.post-actions {
  display: flex;
  gap: 1rem;
}

/* 
 * Heart button styling - replaced text with heart symbol
 * Now explicitly gray when not liked, red when liked
 * Added smooth transition for color change
 */
.heart-button {
  background-color: white;
  color: #aaaaaa; /* Gray color when not liked */
  border: 1px solid #dddddd;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  font-size: 1.2rem;
  cursor: pointer;
  transition: all 0.3s ease; /* Smooth transition for color changes */
  display: flex;
  justify-content: center;
  align-items: center;
}

.heart-button:hover {
  border-color: #ff4757;
  color: #ff4757;
  transform: scale(1.05); /* Slight grow effect on hover */
}

/* 
 * Style for liked state of heart button
 * Bright red when liked with animation
 */
.heart-button.liked {
  background-color: white;
  color: #ff4757; /* Bright red when liked */
  border-color: #ff4757;
  animation: heartPulse 0.3s ease-out; /* Pulse animation when liked */
}

/* Heart pulse animation */
@keyframes heartPulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.2); }
  100% { transform: scale(1); }
}

/* Delete button styling */
.delete-button {
  background-color: white;
  color: #ff4757;
  border: 1px solid #ff4757;
  border-radius: 4px;
  padding: 0.5rem 1rem;
  font-size: 0.9rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
}

.delete-button:hover {
  background-color: #ff4757;
  color: white;
}
